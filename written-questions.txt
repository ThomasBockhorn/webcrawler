Written Questions

Q1. Run the web crawler using the configurations located at src/main/config/written_question_1a.json and
    src/main/config/written_question_1b.json. The only difference between these configurations is that one always uses
    the sequential crawler and the other always uses the parallel crawler. Inspect the profile output in
    profileData.txt.

    -If you are using a multi-processor computer, you should notice that SequentialWebCrawler#crawl and
    ParallelWebCrawler#crawl took about the same amount of time, but PageParserImpl#parse took much longer when run with
    the ParallelWebCrawler.

    Why did the parser take more time when run with ParallelWebCrawler?
    -The profiler computes the total time spent to run the parse method.  However, when put into the parallel webcrawler
    the parse method ran more times.  This increase number of times caused the profileData.txt to show that parse time
    to be greater


Q2. Your manager ran your crawler on her old personal computer, using the configurations from Q1, and she notices that
    the sequential crawler actually outperforms the parallel crawler. She would like to know why.

    (a) Suggest one reason why the sequential web crawler was able to read more web pages than the parallel crawler.
        (Hint: Try setting "parallelism" to 1 in the JSON configs to simulate your manager's computer.)
        -Since the manager has an old single thread computer, parallel web crawler with move memory overhead will
        slow down his machine.  If the manager had a more modern computer with more cores, the parallel web crawler
        will run better.



    (b) Suggest one scenario in which the parallel web crawler will almost certainly perform better than the sequential
        crawler. Why will it perform better?

        -If you want to parse the entire wikipedia site with a large set of key terms.


Q3. Analyze your method profiler through the lens of Aspect Oriented Programming, by answering the following questions:

    (a) What cross-cutting concern is being addressed by the com.udacity.webcrawler.profiler.Profiler class?
        -The writeData method which depend on the IO writer.  One method writes to the screen.  The other to a file.
        There is also a wrapper that will profile methods (show performance) in other classes and
        print them on the screen and on a file.
    (b) What are the join points of the Profiler in the web crawler program?
        -The join points of the Profiler both methods and the wrapper class that profiles the method from other
        classes.

Q4. Identify three (3) different design patterns used in this project, and explain which interfaces, classes, and/or
    libraries use or implement those design patterns.
        - Abstract Factory: PageParserFactory.  The PageParserFactory is created without having to specify
        their concrete class.
        - Singleton: WordCounts/BufferedReader/BufferedWriter  These are used by both ParallelWebCrawler and
        SequentialWebCrawler.
        - Iterator: ParallelWebCrawler  This iterators through SingleCrawler and puts them through the parallel threads.

    For each pattern, name one thing about the pattern that you LIKED, and one thing you DISLIKED. If you did not like
    anything, you can name two things you disliked.
        -Abstract Factory: I liked that the pattern does not need a concrete instance to be used.  It decouples the
        class from the classes and initiates the other class.  I dislike how complicated it is.  Concrete implementation
         is easier to understand.
        -Singleton:  I like about singleton is that it is easier to implement especially for shared resource.
        The downside is that a shared resource can cause a problem if the resource breaks down.
        - Iterator: I like the Iterator when a large amounts of data needs to be processed in some way.  The downside
        is you have to keep an eye for ending the iteration and the resources it takes.

